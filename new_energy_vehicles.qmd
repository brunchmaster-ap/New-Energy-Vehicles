---
title: "NEV Fault Dataset Analysis"
format: html
jupyter: false
execute:
  echo: false
  warning: false
  message: false
---

```{r, echo=FALSE}
library(tidyverse)
library(plotly)
library(gganimate)
library(transformr)
library(magick)
library(ggplot2)
library(hexbin)
  # needed for gganimate smooth transitions

nev_raw <- read_csv("C:/Users/anshb/Downloads/NEV_fault_dataset new (1).csv", col_types = cols(.default = "c"))

numeric_cols <- c("Voltage (V)", "Current (A)", "Motor Speed (RPM)", "Temperature (째C)", 
                  "Vibration (g)", "Ambient Temp (째C)", "Humidity (%)")

nev <- nev_raw %>%
  mutate(across(all_of(numeric_cols), ~ as.numeric(str_remove_all(., "\\."))))

better_theme <- theme_minimal(base_size = 14) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.text.y = element_text(size = 12),
    panel.grid.minor = element_blank()
  )
```



```{r}
library(scales)  # make sure it's loaded

# --- 1. Voltage vs Current ---
p1 <- ggplot(nev, aes(x = `Voltage (V)`, y = `Current (A)`)) +
  stat_binhex(bins = 50) +
  scale_fill_viridis_c(option = "D") +
  scale_x_continuous(labels = label_number(scale_cut = cut_si("b"))) +
  scale_y_continuous(labels = label_number(scale_cut = cut_si("b"))) +
  labs(
    title = "Voltage vs Current Density",
    x = "Voltage (V)",
    y = "Current (A)",
    fill = "Count"
  ) +
  better_theme

ggplotly(p1)

# --- 2. Motor Speed Boxplot ---
p2_boxplot <- ggplot(nev, aes(x = factor(`Fault Label`), y = `Motor Speed (RPM)`, fill = factor(`Fault Label`))) +
  geom_boxplot(alpha = 0.8, outlier.color = "red", outlier.size = 1) +
  scale_fill_viridis_d(option = "D") +
  scale_y_continuous(labels = label_number(scale_cut = cut_si("b"))) +
  labs(
    title = "Motor Speed Distribution by Fault Label",
    x = "Fault Label",
    y = "Motor Speed (RPM)"
  ) +
  better_theme +
  theme(legend.position = "none")

ggplotly(p2_boxplot)

# --- 3. Vibration Histogram ---
p3 <- ggplot(nev, aes(x = `Vibration (g)`, fill = factor(`Fault Label`))) +
  geom_histogram(position = "identity", alpha = 0.6, bins = 30, color = "black") +
  scale_fill_viridis_d(option = "D") +
  scale_x_continuous(labels = label_number(scale_cut = cut_si("b"), accuracy = 0.01)) +
  labs(
    title = "Distribution of Vibration by Fault Label",
    x = "Vibration (g)",
    fill = "Fault Label"
  ) +
  better_theme

ggplotly(p3) %>% layout(legend = list(title = list(text = 'Fault Label')))

# --- 4. Ambient Temp Violin ---
p4_violin <- ggplot(nev, aes(x = factor(`Fault Label`), y = `Ambient Temp (째C)`, fill = factor(`Fault Label`))) +
  geom_violin(alpha = 0.8, trim = TRUE) +
  scale_fill_viridis_d(option = "D") +
  scale_y_continuous(labels = label_number(scale_cut = cut_si("b"))) +
  labs(
    title = "Ambient Temperature Distribution by Fault Label",
    x = "Fault Label",
    y = "Ambient Temperature (째C)"
  ) +
  better_theme +
  theme(legend.position = "none")

ggplotly(p4_violin)
```
